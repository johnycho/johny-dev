"use strict";(self.webpackChunkjohnycho_dev=self.webpackChunkjohnycho_dev||[]).push([[3518],{4369:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"spring-data-jpa-new-entity","metadata":{"permalink":"/spring-data-jpa-new-entity","editUrl":"https://github.com/johnycho/johny-dev/edit/main/blog/2025-02-05-spring-data-jpa-new-entity.mdx","source":"@site/blog/2025-02-05-spring-data-jpa-new-entity.mdx","title":"JPA\uc5d0\uc11c \uc0c8\ub85c\uc6b4 Entity \ud310\ub2e8 \uae30\uc900","description":"_","date":"2025-02-05T00:00:00.000Z","tags":[{"inline":false,"label":"JPA","permalink":"/tags/jpa","description":"JPA tag description"}],"readingTime":3.31,"hasTruncateMarker":true,"authors":[{"name":"Johny Cho","title":"Back End Engineer @ NHN","url":"https://github.com/johnycho","page":{"permalink":"/authors/johnycho"},"socials":{"github":"https://github.com/johnycho","instagram":"https://www.instagram.com/johny__cho","linkedin":"https://www.linkedin.com/in/johny-cho/"},"imageURL":"https://github.com/johnycho.png","key":"johnycho"}],"frontMatter":{"slug":"spring-data-jpa-new-entity","title":"JPA\uc5d0\uc11c \uc0c8\ub85c\uc6b4 Entity \ud310\ub2e8 \uae30\uc900","authors":["johnycho"],"tags":["jpa"]},"unlisted":false,"nextItem":{"title":"\uac1c\ubc1c \ube14\ub85c\uadf8 \uc624\ud508\ud83c\udf89","permalink":"/johny-dev-blog-launched"}},"content":"___\\n\\n# Spring Data JPA\uc5d0\uc11c \uc0c8\ub85c\uc6b4 Entity\uc778\uc9c0 \ud310\ub2e8\ud558\ub294 \ubc29\ubc95\uc740 \ubb34\uc5c7\uc77c\uae4c?\\n\\n\x3c!-- truncate --\x3e\\n\\n```java\\n\\n@Override\\npublic boolean isNew(T entity) {\\n\\n  if (versionAttribute.isEmpty()\\n      || versionAttribute.map(Attribute::getJavaType).map(Class::isPrimitive).orElse(false)) {\\n    return super.isNew(entity);\\n  }\\n\\n  BeanWrapper wrapper = new DirectFieldAccessFallbackBeanWrapper(entity);\\n\\n  return versionAttribute.map(it -> wrapper.getPropertyValue(it.getName()) == null).orElse(true);\\n}\\n```\\n\\n\uc0c8\ub85c\uc6b4 Entity\uc778\uc9c0 \uc5ec\ubd80\ub294 `JpaEntityInformation`\uc758 `isNew(T entity)`\uc5d0 \uc758\ud574 \ud310\ub2e8\ub429\ub2c8\ub2e4. \ub2e4\ub978 \uc124\uc815\uc774 \uc5c6\uc73c\uba74\\n`JpaEntityInformation`\uc758\\n\uad6c\ud604\uccb4 \uc911 `JpaMetamodelEntityInformation` \ud074\ub798\uc2a4\uac00 \ub3d9\uc791\ud569\ub2c8\ub2e4. `@Version`\uc774 \uc0ac\uc6a9\ub41c \ud544\ub4dc\uac00 \uc5c6\uac70\ub098 `@Version`\uc774 \uc0ac\uc6a9\ub41c \ud544\ub4dc\uac00\\nprimitive\\n\ud0c0\uc785\uc774\uba74 `AbstractEntityInformation`\uc758 `isNew()`\ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4. `@Version`\uc774 \uc0ac\uc6a9\ub41c \ud544\ub4dc\uac00 wrapper class\uc774\uba74 null\uc5ec\ubd80\ub97c\\n\ud655\uc778\ud569\ub2c8\ub2e4.\\n\\n```java\\npublic boolean isNew(T entity) {\\n\\n  Id id = getId(entity);\\n  Class<ID> idType = getIdType();\\n\\n  if (!idType.isPrimitive()) {\\n    return id == null;\\n  }\\n\\n  if (id instanceof Number) {\\n    return ((Number) id).longValue() == 0L;\\n  }\\n\\n  throw new IllegalArgumentException(String.format(\\"Unsupported primitive id type %s\\", idType));\\n}\\n```\\n\\n`@Version`\uc774 \uc0ac\uc6a9\ub41c \ud544\ub4dc\uac00 \uc5c6\uc5b4\uc11c AbstractEntityInformation \ud074\ub798\uc2a4\uac00 \ub3d9\uc791\ud558\uba74 `@Id` \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud55c \ud544\ub4dc\ub97c \ud655\uc778\ud574\uc11c primitive \ud0c0\uc785\uc774\\n\uc544\ub2c8\ub77c\uba74\\nnull \uc5ec\ubd80, `Number`\uc758 \ud558\uc704 \ud0c0\uc785\uc774\uba74 0\uc778\uc9c0 \uc5ec\ubd80\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. `@GeneratedValue` \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ud0a4 \uc0dd\uc131 \uc804\ub7b5\uc744 \uc0ac\uc6a9\ud558\uba74 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\ub420 \ub54c id\uac00\\n\ud560\ub2f9\ub429\ub2c8\ub2e4. \ub530\ub77c\uc11c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\ub418\uae30 \uc804\uc5d0 \uba54\ubaa8\ub9ac\uc5d0\uc11c \uc0dd\uc131\ub41c \uac1d\uccb4\ub294 id\uac00 \ube44\uc5b4\uc788\uae30 \ub54c\ubb38\uc5d0 `isNew()`\ub294 true\uac00 \ub418\uc5b4 \uc0c8\ub85c\uc6b4 entity\ub85c \ud310\ub2e8\ud569\ub2c8\ub2e4.\\n\\n## \u2714\ufe0f \uc9c1\uc811 ID\ub97c \ud560\ub2f9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 \uc5b4\ub5bb\uac8c \ub3d9\uc791\ud560\uae4c? \ud83e\udd14\\n\\n\ud0a4 \uc0dd\uc131 \uc804\ub7b5\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \uc9c1\uc811 ID\ub97c \ud560\ub2f9\ud558\ub294 \uacbd\uc6b0 \uc0c8\ub85c\uc6b4 entity\ub85c \uac04\uc8fc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \ub54c\ub294 \uc5d4\ud2f0\ud2f0\uc5d0\uc11c `Persistable<T>` \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud574\uc11c\\n`JpaMetamodelEntityInformation` \ud074\ub798\uc2a4\uac00 \uc544\ub2cc `JpaPersistableEntityInformation`\uc758 `isNew()`\uac00 \ub3d9\uc791\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4.\\n\\n```java\\npublic class JpaPersistableEntityInformation<T extends Persistable<ID>, ID>\\n    extends JpaMetamodelEntityInformation<T, ID> {\\n\\n  public JpaPersistableEntityInformation(Class<T> domainClass, Metamodel metamodel,\\n      PersistenceUnitUtil persistenceUnitUtil) {\\n    super(domainClass, metamodel, persistenceUnitUtil);\\n  }\\n\\n  @Override\\n  public boolean isNew(T entity) {\\n    return entity.isNew();\\n  }\\n\\n  @Nullable\\n  @Override\\n  public ID getId(T entity) {\\n    return entity.getId();\\n  }\\n}\\n```\\n\\n## \u2714\ufe0f \uc0c8\ub85c\uc6b4 Entity\uc778\uc9c0 \ud310\ub2e8\ud558\ub294\uac8c \uc65c \uc911\uc694\ud560\uae4c? \ud83e\udd13\\n\\n```java\\n\\n@Override\\n@Transactional\\npublic <S extends T> S save(S entity) {\\n\\n  Assert.notNull(entity, \\"Entity must not be null\\");\\n\\n  if (entityInformation.isNew(entity)) {\\n    entityManager.persist(entity);\\n    return entity;\\n  } else {\\n    return entityManager.merge(entity);\\n  }\\n}\\n```\\n\\n`SimpleJpaRepository`\uc758 `save()` \uba54\uc11c\ub4dc\uc5d0\uc11c `isNew()\ub97c \uc0ac\uc6a9\ud558\uc5ec persist\ub97c \uc218\ud589\ud560\uc9c0 merge\ub97c \uc218\ud589\ud560\uc9c0 \uacb0\uc815\ud569\ub2c8\ub2e4. \ub9cc\uc57d ID\ub97c \uc9c1\uc811\\n\uc9c0\uc815\ud574\uc8fc\ub294\\n\uacbd\uc6b0\uc5d0\ub294 \uc2e0\uaddc entity\ub77c\uace0 \ud310\ub2e8\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 merge\ub97c \uc218\ud589\ud569\ub2c8\ub2e4. \uc774\ub54c \ud574\ub2f9 entity\ub294 \uc2e0\uaddc\uc784\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 DB\ub97c \uc870\ud68c\ud558\uae30 \ub54c\ubb38\uc5d0 \ube44\ud6a8\uc728\uc801\uc785\ub2c8\ub2e4. \ub530\ub77c\uc11c, \uc0c8\ub85c\uc6b4\\nentity\uc778\uc9c0 \ud310\ub2e8\ud558\ub294 \uac83\uc740 \uc911\uc694\ud55c \ubd80\ubd84\uc785\ub2c8\ub2e4."},{"id":"johny-dev-blog-launched","metadata":{"permalink":"/johny-dev-blog-launched","editUrl":"https://github.com/johnycho/johny-dev/edit/main/blog/2025-02-03-johny-dev-blog-launched.mdx","source":"@site/blog/2025-02-03-johny-dev-blog-launched.mdx","title":"\uac1c\ubc1c \ube14\ub85c\uadf8 \uc624\ud508\ud83c\udf89","description":"_","date":"2025-02-03T00:00:00.000Z","tags":[{"inline":false,"label":"Hello","permalink":"/tags/hello","description":"Hello tag description"}],"readingTime":2.82,"hasTruncateMarker":true,"authors":[{"name":"Johny Cho","title":"Back End Engineer @ NHN","url":"https://github.com/johnycho","page":{"permalink":"/authors/johnycho"},"socials":{"github":"https://github.com/johnycho","instagram":"https://www.instagram.com/johny__cho","linkedin":"https://www.linkedin.com/in/johny-cho/"},"imageURL":"https://github.com/johnycho.png","key":"johnycho"}],"frontMatter":{"slug":"johny-dev-blog-launched","title":"\uac1c\ubc1c \ube14\ub85c\uadf8 \uc624\ud508\ud83c\udf89","authors":["johnycho"],"tags":["hello"]},"unlisted":false,"prevItem":{"title":"JPA\uc5d0\uc11c \uc0c8\ub85c\uc6b4 Entity \ud310\ub2e8 \uae30\uc900","permalink":"/spring-data-jpa-new-entity"}},"content":"import BrowserOnly from \'@docusaurus/BrowserOnly\';\\n\\n___\\n\\n# \ud14c\uc2a4\ud2b8 \ub9c8\ud06c \ub2e4\uc6b4 \ubb38\uc11c\ub97c \uc791\uc131\ud574\ubd05\ub2c8\ub2e4..\\n\\n\x3c!-- truncate --\x3e\\n\\n## :heavy_check_mark:\ufe0f Glorious Demo with TypeScript\\n---\\n\uc544\ub798\ub294 `glorious-demo`\ub97c \uc774\uc6a9\ud55c \uc5d0\ub514\ud130 + \ud130\ubbf8\ub110 \uc560\ub2c8\uba54\uc774\uc158 \uc608\uc81c\uc785\ub2c8\ub2e4.\\n\\n<BrowserOnly fallback={<p>Loading terminal...</p>}>\\n{() => {\\nconst GloriousTerminal = require(\'@site/src/components/GloriousTerminal\').default;\\nreturn (\\n<GloriousTerminal\\ncode={`\\nfunction greet(){\\nconsole.log(\\"Hello World!\\");\\n}\\n\\ngreet();\\n`}\\ncommand=\\"node ./demo\\"\\nresponse=\\"Hello World!\\"\\n/>\\n);\\n}}\\n</BrowserOnly>\\n\\n<br /><br /><br /><br /><br /><br />\\n\\n## :heavy_check_mark: Javascript \ucf54\ub4dc \ube14\ub7ed\\n---\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n## :heavy_check_mark: Java \ucf54\ub4dc \ube14\ub7ed\\n---\\n\\n```java\\npackage com.nhn.meta.banword.application;\\n\\nimport java.util.Arrays;\\nimport java.util.Collections;\\nimport java.util.Map;\\nimport java.util.stream.Collectors;\\n\\npublic class Solution {\\n\\n  public static void main(String[] args) {\\n// \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \uc2e4\ud589 \ubc0f \uacb0\uacfc \ucd9c\ub825\\n    System.out.println(\\"Test Case 1 Result: \\" + solution(2, \\"1A 2F 1C\\") + \\" (Expected: 2)\\");\\n    System.out.println(\\"Test Case 2 Result: \\" + solution(3, \\"\\") + \\" (Expected: 6)\\");\\n    System.out.println(\\n        \\"Test Case 3 Result: \\" + solution(1, \\"1A 1B 1C 1D 1E 1F 1G 1H 1J 1K\\") + \\" (Expected: 0)\\");\\n    System.out.println(\\n        \\"Test Case 4 Result: \\" + solution(50, \\"1A 3C 2B 20G 5A 7K 40D 50H\\") + \\" (Expected: 95)\\");\\n    System.out.println(\\n        \\"Test Case 5 Result: \\" + solution(2, \\"1A 1C 1D 1F 1G 1J 2C 2H\\") + \\" (Expected: 1)\\");\\n    System.out.println(\\n        \\"Test Case 6 Result: \\" + solution(22, \\"1A 3C 2B 20G 5A\\") + \\" (Expected: 41)\\");\\n  }\\n\\n  public static int solution(int N, String S) {\\n    final Map<String, Boolean> reserved = splitStringToMap(S);\\n\\n    int maxFamilies = 0;\\n\\n    for (int row = 1; row <= N; row++) {\\n      boolean leftAndCenter =\\n          !reserved.containsKey(row + \\"B\\") &&\\n              !reserved.containsKey(row + \\"C\\") &&\\n              !reserved.containsKey(row + \\"D\\") &&\\n              !reserved.containsKey(row + \\"E\\");\\n\\n      boolean centerOnly =\\n          !reserved.containsKey(row + \\"D\\") &&\\n              !reserved.containsKey(row + \\"E\\") &&\\n              !reserved.containsKey(row + \\"F\\") &&\\n              !reserved.containsKey(row + \\"G\\");\\n\\n      boolean centerAndRight =\\n          !reserved.containsKey(row + \\"F\\") &&\\n              !reserved.containsKey(row + \\"G\\") &&\\n              !reserved.containsKey(row + \\"H\\") &&\\n              !reserved.containsKey(row + \\"J\\");\\n\\n      int familiesAdded = 0; // \ub514\ubc84\uae45\uc6a9 \ucd94\uac00\\n      if (leftAndCenter) {\\n        maxFamilies++;\\n        familiesAdded++;\\n      }\\n\\n      if (centerAndRight) {\\n        maxFamilies++;\\n        familiesAdded++;\\n      }\\n\\n      if (!leftAndCenter && !centerAndRight && centerOnly) {\\n        maxFamilies++;\\n        familiesAdded++;\\n      }\\n\\n      // \ud589\ubcc4\ub85c \ucd94\uac00\ub41c \uac00\uc871 \uc218 \ucd9c\ub825\\n      System.out.printf(\\n          \\"Row %d: leftAndCenter=%b, centerOnly=%b, centerAndRight=%b, Families added=%d\\\\n\\",\\n          row, leftAndCenter, centerOnly, centerAndRight, familiesAdded);\\n    }\\n\\n    return maxFamilies;\\n  }\\n\\n  public static Map<String, Boolean> splitStringToMap(String s) {\\n    if (s == null || s.trim().isEmpty()) {\\n      return Collections.emptyMap(); // \ubb38\uc790\uc5f4\uc774 \ube44\uc5b4\uc788\uc73c\uba74 \ube48 \ub9f5 \ubc18\ud658\\n    }\\n\\n    // \uacf5\ubc31 \uae30\uc900\uc73c\ub85c \ub098\ub208 \ud6c4, \uac01 \ub2e8\uc5b4\ub97c \ud0a4\ub85c, \ub2e8\uc5b4\uc758 \uae38\uc774\ub97c \uac12\uc73c\ub85c \ub9f5\uc5d0 \uc800\uc7a5\\n    return Arrays.stream(s.split(\\"\\\\\\\\s+\\")) // \uacf5\ubc31 \uae30\uc900\uc73c\ub85c \ubb38\uc790\uc5f4 \ubd84\ub9ac\\n        .filter(word -> !word.isEmpty()) // \ube44\uc5b4 \uc788\ub294 \ubb38\uc790\uc5f4 \uc81c\uac70\\n        .collect(Collectors.toMap(word -> word, word -> true));\\n  }\\n}\\n```\\n\\n## :heavy_check_mark: Task List\\n---\\n\\n- [x] Write the press release\\n- [ ] Update the website\\n- [ ] Contact the media\\n\\n## :heavy_check_mark: Using Emoji Shortcodes\\n---\\nGone camping! :tent: Be back soon.\\n\\nThat is so funny! :joy:\\n\\n## :heavy_check_mark: Highlight\\n---\\nI need to highlight these <mark>very important words</mark>.\\n\\n## :heavy_check_mark: Table\\n---\\n\\n| Syntax    | Description |\\n|-----------|-------------|\\n| Header    | Title       |\\n| Paragraph | Text        |"}]}}')}}]);