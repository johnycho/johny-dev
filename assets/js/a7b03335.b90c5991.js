"use strict";(self.webpackChunkjohnycho_dev=self.webpackChunkjohnycho_dev||[]).push([[7867],{256:a=>{a.exports=JSON.parse('{"tag":{"label":"Data Structure","permalink":"/docs/tags/data-structure","description":"Data Structure tag description","allTagsPath":"/docs/tags","count":4,"items":[{"id":"java/java-jcf-initial-capacity","title":"JCF \uc790\ub8cc \uad6c\uc870\uc758 \ucd08\uae30 \uc6a9\ub7c9","description":"ArrayList\uc758 \uae30\ubcf8 \uc6a9\ub7c9(capacity)\uc740 10\uc774\uba70, \uc6a9\ub7c9\uc774 \uac00\ub4dd \ucc28\uba74 \uae30\uc874 \ud06c\uae30\uc758 1.5\ubc30(oldCapacity + (oldCapacity >> 1)) \ub85c \uc99d\uac00\ud569\ub2c8\ub2e4.","permalink":"/docs/java/java-jcf-initial-capacity"},{"id":"cs/cs-stack-queue","title":"\uc2a4\ud0dd(Stack) \uc790\ub8cc \uad6c\uc870","description":"\u2714\ufe0f \uc2a4\ud0dd (Stack)","permalink":"/docs/cs/cs-stack-queue"},{"id":"cs/cs-binary-tree","title":"\uc774\uc9c4 \ud2b8\ub9ac (Binary Tree)","description":"\ud2b8\ub9ac(Tree) \ub294 \ubc29\ud5a5\uc774 \uc874\uc7ac\ud558\ub294 \uadf8\ub798\ud504\uc758 \uc77c\uc885\uc73c\ub85c \ubd80\ubaa8 \uc815\uc810 \ubc11\uc5d0 \uc5ec\ub7ec \uc790\uc2dd \uc815\uc810\uc774 \uc5f0\uacb0\ub418\uace0, \uc790\uc2dd \uc815\uc810 \uac01\uac01\uc5d0 \ub2e4\uc2dc \uc790\uc2dd \uc815\uc810\uc774 \uc5f0\uacb0\ub418\ub294 \uc7ac\uadc0\uc801 \ud615\ud0dc\uc758 \uc790\ub8cc\uad6c\uc870\uc785\ub2c8\ub2e4. \uadf8 \uc911\uc5d0\uc11c \uac01 \uc815\uc810\uc774 \ucd5c\ub300 2\uac1c\uc758 \uc790\uc2dd \uc815\uc810\uc744 \uac00\uc9c0\ub294 \ud2b8\ub9ac\ub97c \uc774\uc9c4 \ud2b8\ub9ac(Binary Tree) \ub77c\uace0 \ud569\ub2c8\ub2e4.","permalink":"/docs/cs/cs-binary-tree"},{"id":"cs/cs-trie","title":"\ud2b8\ub77c\uc774(Trie) \uc790\ub8cc \uad6c\uc870","description":"\u2714\ufe0f \ud2b8\ub77c\uc774 (Trie) \uc790\ub8cc \uad6c\uc870\ub780?","permalink":"/docs/cs/cs-trie"}],"unlisted":false}}')}}]);